name: Selective File Copy and PR Creation

on:
  pull_request:
    branches:
      - test
    types:
      - opened
      - synchronize

jobs:
  selective-copy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Develop Branch
        uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "yuvrajabr"
          git config --global user.email "yuvrajabr@gmail.com"

      - name: Generate Unique Branch Name
        id: branch-name
        run: |
          UNIQUE_BRANCH="selectivefile-$(date +%s)"
          echo "UNIQUE_BRANCH=$UNIQUE_BRANCH" >> $GITHUB_ENV
          echo "Created branch: $UNIQUE_BRANCH"

      - name: Create and Push Selective Branch
        run: |
          git checkout -b $UNIQUE_BRANCH
          git push origin $UNIQUE_BRANCH

      - name: Read Allowed Files from files.txt
        id: allowed-files
        run: |
          if [ -f ".github/files.txt" ]; then
            ALLOWED_FILES=$(cat .github/files.txt | tr '\n' ' ')
            echo "ALLOWED_FILES=$ALLOWED_FILES" >> $GITHUB_ENV
          else
            echo "ALLOWED_FILES=" >> $GITHUB_ENV
            echo "Warning: .github/files.txt not found or empty."
          fi

      - name: Copy Allowed Files to Selective Branch
        run: |
          git checkout $UNIQUE_BRANCH
          for FILE in $ALLOWED_FILES; do
            if [ -f "$FILE" ]; then
              git add "$FILE"
              echo "Copied and staged $FILE"
            else
              echo "File not found: $FILE"
            fi
          done

          git status  # Check for file changes
          if [ -n "$ALLOWED_FILES" ]; then
            git add $ALLOWED_FILES
            git commit -m "Selective merge: Copy allowed files from develop to $UNIQUE_BRANCH" || echo "No changes to commit"
          else
            echo "No allowed files to add or commit."
          fi
          git push origin $UNIQUE_BRANCH

      - name: Create PR from Selective Branch to Test
        run: |
          gh pr create --base test --head $UNIQUE_BRANCH --title "Selective Merge: Develop to Test" --body "This PR contains only allowed files from develop to test."
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}